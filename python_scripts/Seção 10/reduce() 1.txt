"""
Reduce

Obs: A partir do Python3+ a função reduce() não é mais uma função integrada (built-in). Agora temos
que importar e utilizar esta função a partir do módulo "functools".

Guido van Rossum: Utilize a função reduce() se você realmente precisa dela. Em todo caso, 99%
das vezes um loop for é mais legível.

Para entender reduce()

# Imagine que você tem uma coleção de dados:

dados = [a1, a2, a3,... an]

# E você tem uma função que recebe dois parâmetros:
def funcao(x, y): 
    return x * y;

Assim como o map() e filter(), a função reduce() recebe dois parâmetros: a função e o iterável.

recude(funcao, dados)

A  função reuce() funciona da seguinte forma:
    Passo 1: res1 = f(a1, a2) # Aplica a função nos dois primeiros elementos da coleção e guarda o resultado.
    Passo 2: res2 = f(res1, a3) # Aplica a função passando o resultado do passo1 mais o terceiro elemento e guarda o res.
    
    Isso é repetido até o final.
    Passo 3: res3 = f(res2, a4);

Ou seja, em cada caso ela aplica a função passando como primeiro argumento o resultado da aplicação anterior. No final, 
reduce() irá retornar o resultado final.

# Como funciona na prática?
# Vamos utilizar a função reduce() para multiplicar todos os números de uma lista

from fuctools import reduce

dados = [1, 2, 3, 4, 5, 5, 2, 3, 1]

# Para utilizar o reduce() nós precisamos de uma função que receba dois parâmetros:
multi = lambda x, y: x * y;

res = reduce(multi, dados)
print(res);

# Utilizando um loop normal

res = 1;
for n in dados:
    res = res * n;

print(res)

# O reduce() nada mais é do que um for;
"""