"""
Filter

filter() -> Serve para filtrar dados de uma determinada coleção.

valores = 1, 2, 3, 4, 5, 6, 7;

media = sum(valores)/len(valores);

print(media);

# Biblioteca para trabalhar com dados estatísticos
import statistics

# Dados coletados de algum sensor
dados = [1.3, 2.7, 0.8, 4.1, 4.3, -0.1]

# Calculando a média dos dados utilizando a função mean();
media = statistics.mean(dados);
# print(media);

# Observação: Assim como a função map(), filter() recebe dois parâmetros, sendo
# uma função e uma iterável.

res = filter(lambda x: x > media, dados);
print(list(res));


# Observação: após ser usado os dados de filter(), eles são excluídos da memória;

paises = [ "", "Argentina, "", "Brasil, "Chile", "", "Colombia, "", "Equador", "", "", "Venezuela"]

res = filter(None, paises);
print(list(res));


paises = ["", "Argentina", "", "Brasil", "Chile", "", "Colombia", "", "Equador", "", "", "Venezuela"]

# res = filter(lambda pais: len(pais) > 0, paises);
# res = filter(lambda pais: pais != "", paises);
# res = filter(None, paises);
# print(list(res));



# A diferença entre map() e filter() é:

# map() -> Retorna um objeto mapeando a função para cada elemento do iterável.

# filter() -> Retorna um objeto filtrando apenas os elementos de acordo com a função.

# Exemplo mais compleo

usuarios = [
    {"username": "samuel", "tweets":["Eu adoro bolos", "Eu adoro pizza"]},
    {"username": "caska", "tweets":["Eu amo meu gato."]},
    {"username": "jeff", "tweets":[]},
    {"username": "boby123", "tweets":[]},
    {"username": "doggo", "tweets":["Eu gosto de cachorros", "vou sair hj"]},
]
# print(usuarios);
# Filtrar os usuários que estão inativos no Twitter.
# Forma 1
# inativos = list(filter(lambda usuario: len(usuario["tweets"]) == 0, usuarios))
# print(inativos);

# Forma 2

# inativos = list(filter(lambda usuario: not usuario["tweets"], usuarios))
# print(inativos);


# Combinar filter() e map()

nomes = ["Luccas", "Ana", "Maria"]

# Devemos criar uma lista contendo "Sua instrutora é" + nome, desde que cada nome tenha menos de 5 caracteres.

lista = list(map(lambda nome: f"Sua instrutora é {nome}", filter(lambda nome: len(nome) < 5, nomes)))
print(lista);
"""
